Index: ../../Day 1/NumerosPrimos/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Day 1/NumerosPrimos/.idea/.gitignore b/../../Day 1/NumerosPrimos/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1649097503272)
+++ b/../../Day 1/NumerosPrimos/.idea/.gitignore	(date 1649097503272)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: ../../Day 1/NumerosPrimos/src/com/company/Primo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Day 1/NumerosPrimos/src/com/company/Primo.java b/../../Day 1/NumerosPrimos/src/com/company/Primo.java
new file mode 100644
--- /dev/null	(date 1649097541578)
+++ b/../../Day 1/NumerosPrimos/src/com/company/Primo.java	(date 1649097541578)
@@ -0,0 +1,46 @@
+package com.company;
+
+public class Primo {
+
+    private int num;
+
+    public Primo(int num) {
+        this.num = num;
+    }
+
+    public boolean esPrimo(){
+        boolean esPrimo = true;
+        if (num <= 1) {
+            esPrimo = false;
+        }
+        else{
+            for (int i = 2; i <= num / 2; i++) {
+                if ((num % i) == 0) {
+                    esPrimo = false;
+                    break;
+                }
+            }
+        }
+        return esPrimo;
+    }
+
+    public boolean numPrimo(){
+        boolean esPrimo;
+        switch (num){
+            case 2: esPrimo = true;
+                break;
+            case 3: esPrimo = true;
+                break;
+            case 5: esPrimo = true;
+                break;
+            case 7: esPrimo = true;
+                break;
+            case 11: esPrimo = true;
+                break;
+            case 13: esPrimo = true;
+                break;
+            default: esPrimo = false;
+        }
+        return esPrimo;
+    }
+}
\ No newline at end of file
Index: ../../Day 1/NumerosPrimos/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Day 1/NumerosPrimos/.idea/vcs.xml b/../../Day 1/NumerosPrimos/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1649097506191)
+++ b/../../Day 1/NumerosPrimos/.idea/vcs.xml	(date 1649097506191)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/../.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ../../Day 1/Triangulo/src/com/company/Triangulo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Day 1/Triangulo/src/com/company/Triangulo.java b/../../Day 1/Triangulo/src/com/company/Triangulo.java
new file mode 100644
--- /dev/null	(date 1649097608518)
+++ b/../../Day 1/Triangulo/src/com/company/Triangulo.java	(date 1649097608518)
@@ -0,0 +1,22 @@
+package com.company;
+
+public class Triangulo {
+
+    private float l1, l2, l3;
+
+    public Triangulo(float l1, float l2, float l3) {
+        this.l1 = l1;
+        this.l2 = l2;
+        this.l3 = l3;
+    }
+
+    public String tipoTriangulo() {
+
+        String tipo;
+        if (l1 == l2 && l2 == l3 && l3 == l1) tipo = "Equilatero";
+        else if (l1 == l2 || l1 == l3 || l2 == l3) tipo = "Isosceles";
+        else tipo = "Escaleno";
+        return tipo;
+    }
+}
+
Index: ../../Day 1/Triangulo/Triangulo.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Day 1/Triangulo/Triangulo.iml b/../../Day 1/Triangulo/Triangulo.iml
new file mode 100644
--- /dev/null	(date 1649094722905)
+++ b/../../Day 1/Triangulo/Triangulo.iml	(date 1649094722905)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: ../../Day 1/NumerosPrimos/untitled104.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Day 1/NumerosPrimos/untitled104.iml b/../../Day 1/NumerosPrimos/untitled104.iml
new file mode 100644
--- /dev/null	(date 1649097494967)
+++ b/../../Day 1/NumerosPrimos/untitled104.iml	(date 1649097494967)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
+
